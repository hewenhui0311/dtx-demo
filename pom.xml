<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>dtx-demo</groupId>
	<artifactId>dtx-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<module>seata-demo</module>
		<module>servicecomb-pack-demo</module>
		<module>dtx-demo-common</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
		<spring-boot.version>2.1.4.RELEASE</spring-boot.version>
		<spring-security.version>5.1.4.RELEASE</spring-security.version>
		<mybatis-spring-boot-starter.version>2.1.1</mybatis-spring-boot-starter.version>
		<mysql.version>8.0.21</mysql.version>
		<mybatis.version>3.5.0</mybatis.version>
		<spring-mybatis.version>2.1.1</spring-mybatis.version>
		<mybatis-spring.version>2.0.3</mybatis-spring.version>
		<mybatis-jsr310.version>1.0.2</mybatis-jsr310.version>
		<!-- <mybatis-spring-boot-starter.version>2.1.1</mybatis-spring-boot-starter.version> -->
		<!-- <mybatis-plus.version>2.2.0</mybatis-plus.version> -->
		<pagehelper.version>1.2.10</pagehelper.version>
		<tk-mybatis-starter.version>2.1.5</tk-mybatis-starter.version>
		<tk-mybatis-mapper.version>4.0.0</tk-mybatis-mapper.version>
		<commons-collections4.version>4.2</commons-collections4.version>
		<servicecomb-omega.version>0.6.0</servicecomb-omega.version>
		<spring-cloud-alibaba-seata.version>2.2.0.RELEASE</spring-cloud-alibaba-seata.version>
		<seata-all.version>1.3.0</seata-all.version>
		<logback-classic.version>1.2.3</logback-classic.version>
		<lombok.version>1.18.12</lombok.version>
		<druid-spring-boot-starter.version>1.1.24</druid-spring-boot-starter.version>
		<druid-spring-boot2-actuator.version>1.1.10.2</druid-spring-boot2-actuator.version>
		<objenesis.version>2.6</objenesis.version>
		<zookeeper.version>3.6.0</zookeeper.version>
		<!-- <spring-cloud-alibaba.version>2.1.0.RELEASE</spring-cloud-alibaba.version> -->
		<spring-cloud-starter-alibaba-nacos-discovery.version>0.2.2.RELEASE</spring-cloud-starter-alibaba-nacos-discovery.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-alibaba-dependencies</artifactId> 
				<version>${spring-cloud-alibaba.version}</version> <type>pom</type> <scope>import</scope> 
				</dependency> -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
				<version>${spring-cloud-starter-alibaba-nacos-discovery.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.google.guava</groupId>
						<artifactId>guava</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-spring-boot-starter.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.mybatis</groupId>
						<artifactId>mybatis</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.zaxxer</groupId>
						<artifactId>HikariCP</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis-spring.version}</version>
			</dependency>
			<!-- JAVA类型到JDBC类型的转换，jsr310是新出的一些JAVA日期类型 -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-typehandlers-jsr310</artifactId>
				<version>${mybatis-jsr310.version}</version>
			</dependency>
			<!-- 是基于 Mybatis 框架开发的一个工具，内部实现了对单表的基本数据操作，只需要简单继承 TKMybatis 提供的接口，就能够实现无需编写任何 
				sql 即能完成单表操作。 -->
			<dependency>
				<groupId>tk.mybatis</groupId>
				<artifactId>mapper-spring-boot-starter</artifactId>
				<version>${tk-mybatis-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>tk.mybatis</groupId>
				<artifactId>mapper</artifactId>
				<version>${tk-mybatis-mapper.version}</version>
			</dependency>
			<!-- 基于mybaits的分页插件 -->
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>${pagehelper.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.mybatis.spring.boot</groupId>
						<artifactId>mybatis-spring-boot-starter</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-autoconfigure</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicecomb.pack</groupId>
				<artifactId>omega-spring-starter</artifactId>
				<version>${servicecomb-omega.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>objenesis</artifactId>
						<groupId>org.objenesis</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.servicecomb.pack</groupId>
				<artifactId>omega-spring-cloud-eureka-starter</artifactId>
				<version>${servicecomb-omega.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicecomb.pack</groupId>
				<artifactId>omega-transport-resttemplate</artifactId>
				<version>${servicecomb-omega.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.servicecomb.pack</groupId>
				<artifactId>omega-spring-cloud-zookeeper-starter</artifactId>
				<version>${servicecomb-omega.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.zookeeper</groupId>
						<artifactId>zookeeper</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.servicecomb.pack</groupId>
				<artifactId>omega-spring-cloud-nacos-starter</artifactId>
				<version>${servicecomb-omega.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.cloud</groupId>
						<artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-seata</artifactId>
				<version>${spring-cloud-alibaba-seata.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>seata-all</artifactId>
						<groupId>io.seata</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>io.seata</groupId>
				<artifactId>seata-all</artifactId>
				<version>${seata-all.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback-classic.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>dtx-demo</groupId>
				<artifactId>dtx-demo-common</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>${druid-spring-boot-starter.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-autoconfigure</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.objenesis</groupId>
				<artifactId>objenesis</artifactId>
				<version>${objenesis.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>${zookeeper.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>


</project>